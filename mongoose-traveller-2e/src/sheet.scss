@mixin grid {
    display: grid;
    padding-right: 8px;
    grid-column-gap: 8px;
}

@import url('https://fonts.googleapis.com/css2?family=Oswald&display=swap');

.charactersheet {
    $text-color: #000;
    $border-color: #ccc;
    $dice-color: #730b0b;
    $selected-text-color: #730b0b;
    $selected-border-color: #730b0b;
    $input-background: #f9f9f9;
    $incompatibility-text-color: #ff0000;

    font-size: 13px;
    font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
    color: $text-color;

    * {
        box-sizing: border-box;
    }

    .toggle {
        display: none;
    }

    .toggle--species[value="human"] ~ .toggle_species--human,
    .toggle--species[value="human"] ~ * .toggle_species--human,
    .toggle--species[value="aslan"] ~ .toggle_species--aslan,
    .toggle--species[value="aslan"] ~ * .toggle_species--aslan,
    .toggle--species[value="vargr"] ~ .toggle_species--vargr,
    .toggle--species[value="vargr"] ~ * .toggle_species--vargr,
    .toggle--culture[value="third_imperium"] ~ .toggle_culture--third_imperium,
    .toggle--culture[value="third_imperium"] ~ * .toggle_culture--third_imperium,
    .toggle--culture[value="aslan_hierate"] ~ .toggle_culture--aslan_hierate,
    .toggle--culture[value="aslan_hierate"] ~ * .toggle_culture--aslan_hierate,
    .toggle--culture[value="vargr_extents"] ~ .toggle_culture--vargr_extents,
    .toggle--culture[value="vargr_extents"] ~ * .toggle_culture--vargr_extents
    {
        display: revert;
    }

    .tab {
        display: none;
        padding-left: 16px;
    }

    #tab--biography:checked ~ * .tab--biography,
    #tab--skills:checked ~ * .tab--skills,
    #tab--inventory:checked ~ * .tab--inventory
    {
        display: block;
    }

    h2 {
        font-weight: bold;
        text-transform: uppercase;
        text-decoration: none;
        text-align: right;
        font-size: 14px;
    }
    * h2:not(:first-child) {
        margin-top: 8px;
        border-top: 1px solid $border-color;
    }

    label {
        font-weight: bold;
        text-transform: uppercase;
        font-size: 9px;
        line-height: 12px;
        margin: 8px 0 0 8px;
    }
    input, select, textarea {
        margin: 4px;
        border-top: 0;
        border-left: 0;
        border-right: 0;
        border-bottom: 1px solid $border-color;
        border-radius: 0;
        background-color: $input-background;
        width: 100%;
        height: 30px;
    }
    button[type="roll"] {
        height: 24px;
        color: $dice-color;
    }

    .sepitems,
    #expand_events--yes:checked ~ * .expanditems--events,
    #expand_npcs--yes:checked ~ * .expanditems--npcs,
    #expand_terms--yes:checked ~ * .expanditems--terms {
        .repcontainer > .repitem {
            margin-top: 16px;
            padding-top: 8px;
            border-top: 1px solid $border-color;
        }

        .repcontainer > .repitem:first-child {
            border-top: none;
            padding-top: 0;
            margin-top: 8px;
        }
    }
    .narrowitems,
    #expand_events--no:checked ~ * .expanditems--events,
    #expand_npcs--no:checked ~ * .expanditems--npcs,
    #expand_terms--no:checked ~ * .expanditems--terms {
        .repcontainer > .repitem:not(:first-child) label {
            display: none;
        }

        .hide_narrow {
            display: none;
        }
    }

    .expand_button {
        display: block;
        text-align: right;
        font-size: 12px;
        margin-bottom: 8px;
        text-transform: none;
        text-decoration: underline;
        color: $selected-text-color;
    }

    #expand_events--yes:checked ~ * .expand_button--events_yes,
    #expand_events--no:checked ~ * .expand_button--events_no,
    #expand_npcs--yes:checked ~ * .expand_button--npcs_yes,
    #expand_npcs--no:checked ~ * .expand_button--npcs_no,
    #expand_terms--yes:checked ~ * .expand_button--terms_yes,
    #expand_terms--no:checked ~ * .expand_button--terms_no {
        display: none;
    }

    .character-header {
        @include grid;

        grid-template-columns: auto auto auto max-content max-content auto;
        grid-template-areas:
            "nameF   nameF      nameF    ageL     radsL ."
            "nameF   nameF      nameF    ageF     radsF ."
            "genderL homeworldL speciesL cultureL cultureL cultureL"
            "genderF homeworldF speciesF cultureF cultureF cultureF";

        label.character_name { grid-area: nameL; }
        input.character_name { grid-area: nameF; font-size: 20px; }
        label.character_age { grid-area: ageL; }
        input.character_age { grid-area: ageF; }
        label.character_rads { grid-area: radsL; }
        input.character_rads { grid-area: radsF; }
        label.character_gender { grid-area: genderL; }
        input.character_gender { grid-area: genderF; }
        label.character_homeworld { grid-area: homeworldL; }
        input.character_homeworld { grid-area: homeworldF; }
        label.character_species { grid-area: speciesL; }
        select.character_species { grid-area: speciesF; }
        label.character_culture { grid-area: cultureL; }
        select.character_culture { grid-area: cultureF; }
    }

    .columns {
        display: grid;
        grid-template-columns: max-content auto;
        margin-top: 32px;
    }
    .column--characteristics {
        border-right: 1px solid $border-color;
    }

    .characteristic {
        @include grid;

        grid-template-columns: auto auto max-content;
        grid-template-areas:
            "name name name name"
            "curL maxL dmL  ."
            "curF maxF dmS  dmS";
        grid-column-gap: 4px;
        margin-top: 16px;
        padding-top: 8px;
        padding-right: 8px;
        border-top: 1px solid $border-color;

        h3 {
            grid-area: name;
            font-weight: bold;
            text-align: center;
            text-transform: uppercase;
            font-size: 9px;
            line-height: 12px;
        }
        label.cur { grid-area: curL; }
        input.cur { grid-area: curF; }
        label.max { grid-area: maxL; }
        input.max { grid-area: maxF; }
        label.dm { grid-area: dmL; }
        span.dm { grid-area: dmS; }
    }
    .characteristic--first {
        border-top: none;
        padding-top: 0;
        margin-top: 0;
    }

    .tab_buttons {
        display: flex;
        border-bottom: 1px solid $border-color;

        label {
            text-align: right;
            border-right: 1px solid $border-color;
            font-size: 14px;
            padding: 8px;
        }
    }
    #tab--biography:checked ~ * label[for="tab--biography"],
    #tab--skills:checked ~ * label[for="tab--skills"],
    #tab--inventory:checked ~ * label[for="tab--inventory"]
    {
        color: $selected-text-color;
        border-bottom: 5px solid $selected-border-color;
    }

    .aslan_upbringing {
        @include grid;

        grid-template-columns: auto auto max-content max-content;
        grid-template-areas:
            "clanL inheritL anterL ropL"
            "clanF inheritF anterF ropS";

        label.aslan_clan { grid-area: clanL; }
        select.aslan_clan { grid-area: clanF; }
        label.aslan_inheritance { grid-area: inheritL; }
        select.aslan_inheritance { grid-area: inheritF; }
        label.aslan_ancestral_ter { grid-area: anterL; }
        input.aslan_ancestral_ter { grid-area: anterF; }
        label.aslan_rite_of_passage { grid-area: ropL; }
        span.aslan_rite_of_passage { grid-area: ropS; }
    }

    .recent_event {
        @include grid;

        grid-template-columns: auto auto auto;
        grid-template-areas:
            "nameL    dateL    locationL"
            "nameF    dateF    locationF"
            "detailsL .        ."
            "detailsF detailsF detailsF";

        label.event_name { grid-area: nameL; }
        input.event_name { grid-area: nameF; }
        label.event_date { grid-area: dateL; }
        input.event_date { grid-area: dateF; }
        label.event_location { grid-area: locationL; }
        input.event_location { grid-area: locationF; }
        label.event_details { grid-area: detailsL; }
        textarea.event_details { grid-area: detailsF; }
    }

    .npc {
        @include grid;

        grid-template-columns: max-content max-content max-content auto auto auto;
        grid-template-areas:
            "nameL     nameL    nameL   nameL      locationL typeL"
            "nameF     nameF    nameF   nameF      locationF typeF"
            "affinityL enmityL  powerL  influenceL .         ."
            "affinityF enmityF  powerF  influenceF .         ."
            "detailsL  detailsL detailsL detailsL  detailsL  detailsL"
            "detailsF  detailsF detailsF detailsF  detailsF  detailsF";

        label.npc_name { grid-area: nameL; }
        input.npc_name { grid-area: nameF; }
        label.npc_location { grid-area: locationL; }
        input.npc_location { grid-area: locationF; }
        label.npc_type { grid-area: typeL; }
        select.npc_type { grid-area: typeF; }
        label.npc_affinity { grid-area: affinityL; }
        input.npc_affinity { grid-area: affinityF; }
        label.npc_enmity { grid-area: enmityL; }
        input.npc_enmity { grid-area: enmityF; }
        label.npc_power { grid-area: powerL; }
        input.npc_power { grid-area: powerF; }
        label.npc_influence { grid-area: influenceL; }
        input.npc_influence { grid-area: influenceF; }
        label.npc_details { grid-area: detailsL; }
        textarea.npc_details { grid-area: detailsF; }
    }

    .term {
        @include grid;

        grid-template-columns: max-content auto max-content 4em 4em;
        grid-template-areas:
            "ageL     careerL  rankL    survivedL advancedL"
            "ageF     careerF  rankF    survivedF advancedF"
            "detailsL detailsL detailsL detailsL  detailsL"
            "detailsF detailsF detailsF detailsF  detailsF";

        label.term_age { grid-area: ageL; }
        span.term_age { grid-area: ageF; }
        label.term_career { grid-area: careerL; }
        input.term_career { grid-area: careerF; }
        label.term_rank { grid-area: rankL; }
        span.term_rank { grid-area: rankF; }
        label.term_survived { grid-area: survivedL; }
        input.term_survived { grid-area: survivedF; }
        label.term_advanced { grid-area: advancedL; }
        input.term_advanced { grid-area: advancedF; }
        label.term_details { grid-area: detailsL; }
        textarea.term_details { grid-area: detailsF; }
    }

    .benefit {
        @include grid;

        grid-template-columns: 30% auto;
        grid-template-areas:
            "careerL detailsL"
            "careerF detailsF";

        label.benefit_career { grid-area: careerL; }
        input.benefit_career { grid-area: careerF; }
        label.benefit_details { grid-area: detailsL; }
        textarea.benefit_details { grid-area: detailsF; }
    }

    .skills_top {
        @include grid;

        grid-template-columns: max-content max-content auto;
        grid-template-areas:
            "joatL untrainedL ."
            "joatF untrainedF .";

        label.joat { grid-area: joatL; }
        input.joat { grid-area: joatF; }
        label.untrained_dm { grid-area: untrainedL; }
        span.untrained_dm { grid-area: untrainedF; }
    }

    .skill {
        @include grid;

        grid-template-columns: auto auto max-content max-content;
        grid-template-areas:
            "nameL specialismL expL levelL"
            "nameF specialismF expF levelF";

        label.skill_name { grid-area: nameL; }
        input.skill_name { grid-area: nameF; }
        label.skill_specialism { grid-area: specialismL; }
        input.skill_specialism { grid-area: specialismF; }
        label.skill_exp { grid-area: expL; }
        input.skill_exp { grid-area: expF; }
        label.skill_level { grid-area: levelL; }
        span.skill_level { grid-area: levelF; }
    }

    .finance {
        @include grid;

        grid-template-columns: auto auto auto auto auto;
        grid-template-areas:
            "pensionL debtL  cashL  shipL  livingL"
            "pensionF debtF  cashF  shipF  livingF"
            "otherL   otherL otherL otherL otherL"
            "otherF   otherF otherF otherF otherF";

        label.finance_pension { grid-area: pensionL; }
        input.finance_pension { grid-area: pensionF; }
        label.finance_debt { grid-area: debtL; }
        input.finance_debt { grid-area: debtF; }
        label.finance_cash { grid-area: cashL; }
        input.finance_cash { grid-area: cashF; }
        label.finance_ship { grid-area: shipL; }
        input.finance_ship { grid-area: shipF; }
        label.finance_living { grid-area: livingL; }
        input.finance_living { grid-area: livingF; }
        label.finance_other { grid-area: otherL; }
        textarea.finance_other { grid-area: otherF; }

        input[type="number"] {
            width: 100%;
        }
    }

    .armour {
        @include grid;

        grid-template-columns: auto max-content max-content max-content max-content auto;
        grid-template-areas:
            "typeL    tlL      weightL  radL     protectionL protectionlL"
            "typeF    tlF      weightF  radF     protectionF protectionlF"
            "detailsL detailsL detailsL detailsL detailsL    detailsL"
            "detailsF detailsF detailsF detailsF detailsF    detailsF";

        label.armour_type { grid-area: typeL; }
        input.armour_type { grid-area: typeF; }
        label.armour_tl { grid-area: tlL; }
        input.armour_tl { grid-area: tlF; }
        label.armour_weight { grid-area: weightL; }
        input.armour_weight { grid-area: weightF; }
        label.armour_rad { grid-area: radL; }
        input.armour_rad { grid-area: radF; }
        label.armour_protection { grid-area: protectionL; }
        input.armour_protection { grid-area: protectionF; }
        label.armour_protection_l { grid-area: protectionlL; }
        span.armour_protection_l { grid-area: protectionlF; }
        label.armour_details { grid-area: detailsL; }
        input.armour_details { grid-area: detailsF; }
    }

    .weapon {
        @include grid;

        grid-template-columns: auto max-content max-content auto auto max-content max-content;
        grid-template-areas:
            "typeL    tlL      weightL  rangeL   damageL  magazineL skillL"
            "typeF    tlF      weightF  rangeF   damageF  magazineF skillF"
            "detailsL detailsL detailsL detailsL detailsL detailsL  detailsL"
            "detailsF detailsF detailsF detailsF detailsF detailsF  detailsF";

        label.weapon_type { grid-area: typeL; }
        input.weapon_type { grid-area: typeF; }
        label.weapon_tl { grid-area: tlL; }
        input.weapon_tl { grid-area: tlF; }
        label.weapon_weight { grid-area: weightL; }
        input.weapon_weight { grid-area: weightF; }
        label.weapon_range { grid-area: rangeL; }
        input.weapon_range { grid-area: rangeF; }
        label.weapon_damage { grid-area: damageL; }
        input.weapon_damage { grid-area: damageF; }
        label.weapon_magazine { grid-area: magazineL; }
        input.weapon_magazine { grid-area: magazineF; }
        label.weapon_skill { grid-area: skillL; }
        span.weapon_skill { grid-area: skillF; }
        label.weapon_details { grid-area: detailsL; }
        input.weapon_details { grid-area: detailsF; }
    }

    .equipment {
        @include grid;

        grid-template-columns: auto max-content max-content auto;
        grid-template-areas:
            "nameL    tlL      weightL  quantityL"
            "nameF    tlF      weightF  quantityF"
            "detailsL detailsL detailsL detailsL"
            "detailsF detailsF detailsF detailsF";

        label.equipment_name { grid-area: nameL; }
        input.equipment_name { grid-area: nameF; }
        label.equipment_tl { grid-area: tlL; }
        input.equipment_tl { grid-area: tlF; }
        label.equipment_weight { grid-area: weightL; }
        input.equipment_weight { grid-area: weightF; }
        label.equipment_quantity { grid-area: quantityL; }
        input.equipment_quantity { grid-area: quantityF; }
        label.equipment_details { grid-area: detailsL; }
        input.equipment_details { grid-area: detailsF; }
    }

    .incompatibility {
        font-weight: bold;
        color: $incompatibility-text-color;
    }
}

.sheet-rolltemplate-rolls {
    .sheet-container {
        border: 1px solid #ccc;
        background-color: #f9f9f9;
        font-family: "Oswald", sans-serif;
        line-height: revert;
    }

    .sheet-header {
        padding: 4px;
        border-bottom: 1px solid #ccc;
    }

    .sheet-character_name {
        text-align: right;
        text-transform: uppercase;
        font-size: 16px;
        padding-bottom: 4px;
    }

    .sheet-title {
        font-size: 18px;
    }

    .sheet-subtitle {
        padding-top: 4px;
        font-size: 16px;
    }

    .sheet-content {
        display: grid;
        grid-template-columns: auto auto;
        font-size: 16px;

        .sheet-key {
            padding-right: 10px;
            text-align: right;
        }
    }
    .sheet-content > div {
        padding: 8px;
    }

    .sheet-desc {
        grid-column: span 2;
        padding: 4px;
        text-align: center;
    }
}
